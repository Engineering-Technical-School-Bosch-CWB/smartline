using SmartLine.Model;

namespace SmartLine.Services.ProductService;

public static class MatrizCiclos
{
    public static List<Produto> Produtos =
    [
        new Produto("CUMMINS 2.16", 109.81, 217.32),
        new Produto("F.P.T.", 83.2, 248),
        new Produto("EQUINOX", 77.69, 248),
        new Produto("MAN", 154.7, 240.2),
        new Produto("AGCO N3", 133.06, 246.66),
        new Produto("MIM N3", 116.86, 238.13),
        new Produto("RAINBOW", 85.93, 264.01),
        new Produto("CUMMINS N1", 150.42, 178.9),
        new Produto("PEGASUS", 154.7, 179.75),
        new Produto("TIER", 150.42, 168.93),
        new Produto("MWM N1", 50.08, 211.4),
        new Produto("IVECO", 91.54, 229.56),
        new Produto("CRI AGCO", 127.96, 198.84),
        new Produto("CRI CUMMIINS", 182.88, 163.02),
        new Produto("PERKINS", 125.28, 268.6),
        new Produto("CNHI", 315, 315),
        new Produto("ISUZU", 119.59, 287.81),
        new Produto("TATA", 77.69, 249.1),
        new Produto("Cummins 3.18", 107.14, 315.01),
        new Produto("VCE", 178, 260)
    ];

    public static void AddProduto(string nome, double tempoLadoA, double tempoLadoB)
    {
        Produtos.Add(new Produto(nome, tempoLadoA, tempoLadoB));
    }

    public static Produto GetProduto(string nome)
    {
        var produto = Produtos.FirstOrDefault(p => p.Nome.Equals(nome))
            ?? throw new InvalidOperationException($"Produto {nome} n√£o encontrado");
        return produto;
    }

    public static double GetCiclo(Produto produtoA, Produto produtoB)
    {
        double ciclo1 = (produtoA.TempoLadoA + produtoB.TempoLadoA) / 4;
        double ciclo2 = produtoA.TempoLadoB / 4;
        double ciclo3 = produtoB.TempoLadoB / 4;

        return Math.Max(ciclo1, Math.Max(ciclo2, ciclo3));
    }
}
