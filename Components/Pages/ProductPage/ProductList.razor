@page "/prodList"
@using SmartLine.Services.AlertService
@using SmartLine.Services.ProductService
@using SmartLine.Model

@using SmartLine.Components.Shared.ConfirmButton

@inject IAlertService AlertService
@inject IProductRepository _productRepository
@inject NavigationManager navigationManager

<h2>Produtos</h2>

@if (prodList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>Nome</th>
                <th>Part Number</th>
                <th>Editar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prod in prodList.Select((value, index) => new { value, index}))
            {
                <tr>
                    <td>@(prod.index + 1)</td>
                    <td>@prod.value.Name</td>
                    <td>@prod.value.PartNumber</td>
                    <td>
                        <button class="icon-btn" @onclick="() => UpdateProduct(prod.value)">
                            <svg style="color: #00884a" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
                            </svg>
                        </button>
                        <button class="icon-btn" @onclick="() => DeleteProduct(prod.value)">
                            <svg style="color: #ed0007" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-square" viewBox="0 0 16 16">
                            <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <ConfirmButton Text="Novo Produto" OnClick="AddNewProduct" />
}

@code
{
    private List<SmartLine.Model.Product> prodList = new();
    protected override async Task OnInitializedAsync()
    {
        prodList = (await _productRepository.GetProductAsync()).ToList();
    }
    public void AddNewProduct()
    {
        navigationManager.NavigateTo("newProduct");
    }
    public void UpdateProduct(Product product)
    {
        navigationManager.NavigateTo($"updateproduct/{product.Id}");
    }
    public async void DeleteProduct(Product product)
    {
        bool confirm = await AlertService.ShowConfirmAsync(
            "Confirmar Exclus√£o",
            $"Tem certeza que deseja excluir o produto {product.Name}?",
            "Sim", "Cancelar"
        );

        if (!confirm) return;

        await _productRepository.DeleteProductAsync(product.Id);
        prodList.Remove(product);
        this.StateHasChanged();
    }
}
